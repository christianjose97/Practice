{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class Solution \{\
public int minDepth(TreeNode root) \{\
if(root == null)\{\
return 0;\
\}\
int level = 0;\
Queue queue = new LinkedList<>();\
queue.offer(root);\
while(!queue.isEmpty())\{\
int cnt = queue.size();\
level++;\
while(cnt-- > 0)\{\
TreeNode cur = queue.poll();\
if(cur.left == null && cur.right == null)\{\
return level;\
\}\
if(cur.left != null)\{\
queue.offer(cur.left);\
\}\
if(cur.right != null)\{\
queue.offer(cur.right);\
\}\
\}\
\}\
return level;\
\}\
\}}